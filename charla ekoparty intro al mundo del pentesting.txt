Webinar que dan los instructores de los training de estos años
estas cosas se explican mejor en el training

pentesting de aplicaciones corporativas, desde el punto de vista ofensivo

SAP es la app de manejo de ciberseguridad muy usada a nivel mundial
tiene varias tecnologías y complejo porque hay varios lenguajes de programación mezclados

captura1: es como un emulador que me independiza del sistema operativo, todos los pentesters que usan la app necesitan de esa capa intermedia
también independiza también motor de base de datos

captura2: a más sistemas, el recuadro de la izquierda debe crecer; el otro siempre es uno
Sistema SAP = System ID = SID -> con varias instancias de diálogo (recuadro de la izquierda )+ instancia central (recuadro de la derecha) + base de datos

landscape = varios sistemas de un mismo producto donde hay sists de desarrollo, QA, producción, etc

captutra3: instancias = conjunto de bianrios que corren como procesos (de entrada o diálogo), el nro de jinstancia forma parte de un patrón de puertos. Este numero de instancia se ve repetido en los diferentes puertos
en un sistema SAP hay muchos puertos abiertos, pero saber esto ayuda demasiado
las diferentes instacias pueden tener diferentes cualidades (como diferente largo de claves)
hacer seguridad (lado blue) de un SAP es muy complicado porque hay muchas puertas abiertas

los clientes/mandantes son números de 3 dígitos dentro de una columna de una DB para saber independencia de instrucciones. Cada cliente tiene sus propios usuarios
por lo cual lo debo hacer para cada cliente. El sap* es un cliente por defecto, de clave "paz", y tal vez no todos los clientes hayan protegifo a sap*

captura4: el cliente es una forma de acceder a los datos, es lógico simplemente

captura5: hay 8 gateways para probar distintos test en un mismo landscape. Si hay cuatro clientes y sabes que existe sap*, significa que hay (clientes por sistemas) al menos 12 usuarios (4 mandantes * 3 sistemas) sap* que pueden llegar a tener la clave "paz" por defecto

1ra DEMO: 
ping sap-aba...training.onapsis.com //hace un scan a los puertos, con la herramienta nmap
// se ven puertos con nombres característicos de SAP, donde cada uno se comunica de manera diferente

captura6: hay varios SAP GUI por ejemplo. 
Hay una instancia de diálogo en un mismo sistema porque inicia con 36XX otro puerto, ect; lo que hago es identificar que probar con este host (reconozco lo disponible en el host sap)
rute_force.py --discovery --discovery-range=200-350 ... etc // con la herramienta pasap (publica en github) puedo logearme a fuerza bruta, descubriendo clientes haciendo chequeos aleatorios de nombres para saber //para todos estos clientes vamos a probar claves por defecto

capotura7: el gateway es el componente más importante, que trabaja con otros sistemas SAP u otro software
el mundo se adapta al protocolo RFC, ya que es muy grande SAP
puede iniciar binario remotamente// puedo hacer comandos remotos si es que está mal configurado

captura8: el gateway tiene su firewall, donde alguna instancia de un mismo sistema le puede mandar instrucciones remotas a otra (no ente sistemas, aunque sea el mismo landscape)

2da DEMO: ping de la ip
al puerto 3300 (uno que se que existed en este ejemplo) le mando un comando a hacer, si es que el sistema está mal configurado donde se permite todo (esto suele pasar cuando les falla algo y lo quieren resolver rápido)
hay 1 gateway por instancia de diálogo

si el gateway está mal configurado: Bypass
con el message server es único por sistema, el cual comunica instancias y registrar nuevas instancias
no es como un proxy continuo de la info, simplemente le dice a la nueva instancia a que dispacher conectarse
tiene una ACL que filtra IPs (por defecto acepta a cualquiera)

3ra DEMO: hago de cuenta que soy un sistema SAP que quiere ser segura por instancia //  si dejó por defecto cualquier IP me termino filtrando al sistema
sap_gw python SAPanonGWv1.py -t 17 .... // me registro como parte de las instancias del sistema SAP (tal vez me olvidé de poner algún código)
//ahora el gateway aconfía en mi

otro bypass es abusar de SAP Start Service, en el web service, que se comunica por http que muestra varios métodos //si el administrador nos abrió la puerta por equivocación
4ta DEMO: captura9: con SoapUI (hasta ahora todas herramientas gratis)
ahora puedo ver qué métodos están protegidos y cuales no
wn - pwm // tengo la lista de métodos no protegidos, gracias a otra instrucción anterior

esto es una vulnerabilidad que puede ser parcheado, lo anterior es una missconfiguration (trabajaron mal)
captura10: me dejeba tener un usuario de administrador ( más info en una charla ade una ekoparty anterior)
DEMO 5: captura11: en la consola de metasploit hay info de esto
//desp sigo un poco más con la herramienta y puedo generar un usario root
//ya con esto tengo acceso completo a la distancia de un metasploit

conclusiones: captura12
poner parches tarda mucho porque es dificil de actualizar los SAP
hay casos que se usaron vulnerabilidades de hace más de 10 años

se puede pivotear entre sistemas, no solo entre intancias

el video de la charla queda en youtube

Consultas e inscripciones
capacitación@ekoparty.org
nadia@ekoparty.org
Whatsapp +54 9 11 3447-9336
